# Do not modify this file!  It was generated by ‘nixos-generate-config’ and may be overwritten by future invocations.  Please make changes to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod" ];
  # boot.initrd.kernelModules = [ ];
  boot.initrd.kernelModules = [ "xe" ]; # FORCE 'xe' INTEL DRIVER
  boot.kernelPackages = pkgs.linuxPackages_latest;
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = { 
    device = "/dev/disk/by-uuid/db9840e3-6a9f-438e-bebe-5ebd7dbaf90f";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-6fd6a22f-839b-4eeb-8f18-cd0173d085a7".device = "/dev/disk/by-uuid/6fd6a22f-839b-4eeb-8f18-cd0173d085a7";

  fileSystems."/boot" = { 
    device = "/dev/disk/by-uuid/A9CC-D1F7";
    fsType = "vfat";
    options = [ "fmask=0022" "dmask=0022" ];
  };

  # swapDevices =
    # [ { device = "/dev/disk/by-uuid/71d7e4d8-328d-45f4-9b84-6579c564ab84"; }
    # ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
