#!/usr/bin/env bash

# activeMonitorId=$(hyprctl activeworkspace -j | jq .monitorID)
# height=$(hyprctl monitors -j | jq ".[] | select(.id==${activeMonitorId}).height")
# width=$(hyprctl monitors -j | jq ".[] | select(.id==${activeMonitorId})".width)
# geometry="${width}x${height}"
dir="$(xdg-user-dir PICTURES)/Screenshots"
time=$(date +%Y-%m-%d-%I-%M-%S)
file="Screenshot_${time}.png"

# Buttons
screen="󰹑   Capture Desktop"
area="   Capture Area"
window="󱣵   Capture Window"
infive="󰔝   Take in 3s"
inten="󰔜   Take in 10s"

# countdown
countdown() {
  sleep "$1"
}

# take shots
shotnow() {
  cd "${dir}" && sleep 0.5 && grim -c | tee "$file" | wl-copy --primary --type image/png
}

shot3() {
  coords=$(slurp -d -b 00000000 -c 00000000 -s 00000010)
  countdown '3'
  grim -c -g "$coords" - | swappy -f -
}

shot10() {
  coords=$(slurp -d -b 00000000 -c 00000000 -s 00000010)
  countdown '10'
  grim -c -g "$coords" - | swappy -f -
}

shotwin() {
  cd "${dir}" && grim -c -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | tee "$file" | wl-copy --primary --type image/png
}

shotarea() {
  coords=$(slurp -d -b 00000000 -c 00000000 -s 00000010)
  grim -c -g "$coords" - | swappy -f -
}

if [[ ! -d "$dir" ]]; then
  mkdir -p "$dir"
fi

# window temp disabled - need to figure out how to do the same with hyprctl
# options="$area\n$screen\n$window\n$infive\n$inten"
options="$area\n$screen\n$infive\n$inten"

chosen=$(echo -e "$options" | rofi \
  -dmenu \
  -p '' \
  -l 4 \
  -i \
  -scroll-method 1 \
  -theme "$HOME/.config/rofi/config/screenshot.rasi")

case $chosen in
  "$area")
    shotarea
    ;;
  "$screen")
    shotnow
    ;;
  "$window")
    shotwin
    ;;
  "$infive")
    shot3
    ;;
  "$inten")
    shot10
    ;;
esac
